//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ArchiveModel", "FK_arcArchive_IdArchiveType", "arcArchiveType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Archive.arcArchiveType), "arcArchive", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Archive.arcArchive), true)]

#endregion

namespace Archive
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ArchiveEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ArchiveEntities object using the connection string found in the 'ArchiveEntities' section of the application configuration file.
        /// </summary>
        public ArchiveEntities() : base("name=ArchiveEntities", "ArchiveEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ArchiveEntities object.
        /// </summary>
        public ArchiveEntities(string connectionString) : base(connectionString, "ArchiveEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ArchiveEntities object.
        /// </summary>
        public ArchiveEntities(EntityConnection connection) : base(connection, "ArchiveEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<arcArchive> arcArchives
        {
            get
            {
                if ((_arcArchives == null))
                {
                    _arcArchives = base.CreateObjectSet<arcArchive>("arcArchives");
                }
                return _arcArchives;
            }
        }
        private ObjectSet<arcArchive> _arcArchives;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<arcArchiveType> arcArchiveTypes
        {
            get
            {
                if ((_arcArchiveTypes == null))
                {
                    _arcArchiveTypes = base.CreateObjectSet<arcArchiveType>("arcArchiveTypes");
                }
                return _arcArchiveTypes;
            }
        }
        private ObjectSet<arcArchiveType> _arcArchiveTypes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the arcArchives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToarcArchives(arcArchive arcArchive)
        {
            base.AddObject("arcArchives", arcArchive);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the arcArchiveTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToarcArchiveTypes(arcArchiveType arcArchiveType)
        {
            base.AddObject("arcArchiveTypes", arcArchiveType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ArchiveModel", Name="arcArchive")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class arcArchive : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new arcArchive object.
        /// </summary>
        /// <param name="idArchive">Initial value of the IdArchive property.</param>
        /// <param name="idArchiveType">Initial value of the IdArchiveType property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        public static arcArchive CreatearcArchive(global::System.Int32 idArchive, global::System.Int32 idArchiveType, global::System.String name, global::System.String path)
        {
            arcArchive arcArchive = new arcArchive();
            arcArchive.IdArchive = idArchive;
            arcArchive.IdArchiveType = idArchiveType;
            arcArchive.Name = name;
            arcArchive.Path = path;
            return arcArchive;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdArchive
        {
            get
            {
                return _IdArchive;
            }
            set
            {
                if (_IdArchive != value)
                {
                    OnIdArchiveChanging(value);
                    ReportPropertyChanging("IdArchive");
                    _IdArchive = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdArchive");
                    OnIdArchiveChanged();
                }
            }
        }
        private global::System.Int32 _IdArchive;
        partial void OnIdArchiveChanging(global::System.Int32 value);
        partial void OnIdArchiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdArchiveType
        {
            get
            {
                return _IdArchiveType;
            }
            set
            {
                OnIdArchiveTypeChanging(value);
                ReportPropertyChanging("IdArchiveType");
                _IdArchiveType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdArchiveType");
                OnIdArchiveTypeChanged();
            }
        }
        private global::System.Int32 _IdArchiveType;
        partial void OnIdArchiveTypeChanging(global::System.Int32 value);
        partial void OnIdArchiveTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ArchiveModel", "FK_arcArchive_IdArchiveType", "arcArchiveType")]
        public arcArchiveType arcArchiveType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<arcArchiveType>("ArchiveModel.FK_arcArchive_IdArchiveType", "arcArchiveType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<arcArchiveType>("ArchiveModel.FK_arcArchive_IdArchiveType", "arcArchiveType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<arcArchiveType> arcArchiveTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<arcArchiveType>("ArchiveModel.FK_arcArchive_IdArchiveType", "arcArchiveType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<arcArchiveType>("ArchiveModel.FK_arcArchive_IdArchiveType", "arcArchiveType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ArchiveModel", Name="arcArchiveType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class arcArchiveType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new arcArchiveType object.
        /// </summary>
        /// <param name="idArchiveType">Initial value of the IdArchiveType property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static arcArchiveType CreatearcArchiveType(global::System.Int32 idArchiveType, global::System.String name)
        {
            arcArchiveType arcArchiveType = new arcArchiveType();
            arcArchiveType.IdArchiveType = idArchiveType;
            arcArchiveType.Name = name;
            return arcArchiveType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdArchiveType
        {
            get
            {
                return _IdArchiveType;
            }
            set
            {
                if (_IdArchiveType != value)
                {
                    OnIdArchiveTypeChanging(value);
                    ReportPropertyChanging("IdArchiveType");
                    _IdArchiveType = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdArchiveType");
                    OnIdArchiveTypeChanged();
                }
            }
        }
        private global::System.Int32 _IdArchiveType;
        partial void OnIdArchiveTypeChanging(global::System.Int32 value);
        partial void OnIdArchiveTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxSize
        {
            get
            {
                return _MaxSize;
            }
            set
            {
                OnMaxSizeChanging(value);
                ReportPropertyChanging("MaxSize");
                _MaxSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxSize");
                OnMaxSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxSize;
        partial void OnMaxSizeChanging(Nullable<global::System.Int32> value);
        partial void OnMaxSizeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ArchiveModel", "FK_arcArchive_IdArchiveType", "arcArchive")]
        public EntityCollection<arcArchive> arcArchives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<arcArchive>("ArchiveModel.FK_arcArchive_IdArchiveType", "arcArchive");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<arcArchive>("ArchiveModel.FK_arcArchive_IdArchiveType", "arcArchive", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
